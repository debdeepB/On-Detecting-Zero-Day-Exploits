function computeAverage(Matrix,window_size)

a=0;
b=0;
c=0;
fprintf('\nWindow Size:%d\n\n--------------------------------\n\n',window_size);
for j=1:size(Matrix,2)-window_size+1
    idx=kmedoids(Matrix(:,j:j+window_size-1),2,'Distance','cityBlock');
    [a1,b1,c1]=computePerformanceChanged(idx);
    if isnan(b1)
        b1=0;
    end
    fprintf('\nIteration: %d, <start,end>:<%d,%d>, <Accuracy,DR,FPR>:<%d,%d,%d>',j,j,j+window_size-1,a1,b1,c1);
    a=a+a1;
    b=b+b1;
    c=c+c1;
end

accuracy=a/(size(Matrix,2)-window_size+1);
detection=b/(size(Matrix,2)-window_size+1);
fpr=c/(size(Matrix,2)-window_size+1);
fprintf('\n*******************\nAverage accuracy: %d, Average detection rate: %d, Average False Positive Rate: %d',accuracy,detection,fpr);


end
