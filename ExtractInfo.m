function [Training,Testing,TrainingNormal] = ExtractInfo()

%Normal Trace
cd G:\live_lpr_normal\real\1232
files=dir;
TrainFraction=0.9;
nTrainNormal=ceil(TrainFraction*(length(files)-2)); %. and .. are the first 2 files
nTestNormal=length(files)-2-nTrainNormal;
TrainingNormal = cell(nTrainNormal,1);
TestingNormal = cell(nTestNormal,1);


for i=3:nTrainNormal+2
    TrainingNormal{i-2}=importdata(files(i).name);
end
k=1;
for i=nTrainNormal+3:length(files)
    TestingNormal{k}=importdata(files(i).name);
    k=k+1;
end

%Exploit Trace
cd G:\live_lpr_exploit\lprcp-unm\1001
files=dir;
nTrainExploit=floor(TrainFraction*(length(files)-2)); %. and .. are the first 2 files
nTestExploit=length(files)-2-nTrainExploit;
TrainingExploit = cell(nTrainExploit,1);
TestingExploit = cell(nTestExploit,1);

for i=3:nTrainExploit+2
    TrainingExploit{i-2}=importdata(files(i).name);
end
k=1;
for i=nTrainExploit+3:length(files)
    TestingExploit{k}=importdata(files(i).name);
    k=k+1;
end

cd G:\Thesis\IntrusionDetectionMatlab

%Making the concatenated Training matrix

Training=zeros(nTrainNormal+nTrainExploit,169);


for i=1:nTrainNormal
    for j=1:length(TrainingNormal{i})
        k=TrainingNormal{i}(j,2);
        Training(i,k+1)=Training(i,k+1)+1;
    end
end

m=1;

for i=nTrainNormal+1:size(Training,1)
    for j=1:length(TrainingExploit{m})
        k=TrainingExploit{m}(j,2);
        Training(i,k+1)=Training(i,k+1)+1;
    end
    m=m+1;
end

%Making the concatenated Testing Matrix

Testing=zeros(nTestNormal+nTestExploit,169);


for i=1:nTestNormal
for j=1:length(TestingNormal{i})
k=TestingNormal{i}(j,2);
Testing(i,k+1)=Testing(i,k+1)+1;
end
end

m=1;
for i=nTestNormal+1:size(Testing,1)
    for j=1:length(TestingExploit{m})
        k=TestingExploit{m}(j,2);
        Testing(i,k+1)=Testing(i,k+1)+1;
    end
    m=m+1;
end
end








